{
  "name": "drafter",
  "version": "0.2.8",
  "author": {
    "name": "Apiary.io",
    "email": "support@apiary.io"
  },
  "description": "Snow Crash parser harness",
  "license": "MIT",
  "main": "lib/drafter.js",
  "bin": {
    "drafter": "bin/drafter"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apiaryio/drafter.js.git"
  },
  "engines": {
    "node": ">= 0.10.x"
  },
  "scripts": {
    "test": "scripts/test",
    "prepublish": "scripts/build"
  },
  "dependencies": {
    "async": "~0.9.0",
    "boutique": "~0.1.7",
    "deep-equal": "1.0.x",
    "deepcopy": "0.4.x",
    "protagonist": "~0.20.1",
    "yargs": "~1.3.3"
  },
  "devDependencies": {
    "coffee-script": "~1.7.1",
    "chai": "~1.10.0",
    "mocha": "~2.0.1"
  },
  "readme": "# Drafter\n\n[![Circle CI](https://circleci.com/gh/apiaryio/drafter.js.svg?style=svg&circle-token=f4b9c3fc34979e81d36c9d15e576e23f62e1e913)](https://circleci.com/gh/apiaryio/drafter.js)\n\nSnow Crash parser harness.\n\n## Introduction\nDrafter takes an API blueprint on its input, parses, and then processes the AST to exposes the [Parse Result][] for further use. Drafter expands MSON data structures from the AST and generates JSON representations and JSON Schema representation of MSON structures where they are not found in the original AST.\n\n## Installation\nNode.js v0.10 is required.\n\n```shell\n$ npm install -g drafter\n```\n\n## Getting Started\n\n### Library\n```js\nvar Drafter = require('drafter');\nvar blueprint = '# GET /message\\n' +\n                '+ Response 200\\n' +\n                '\\n' +\n                '        Hello World!\\n'\n\nvar drafter = new Drafter;\ndrafter.make(blueprint, function(error, result) {\n    if (error) {\n        console.log(error);\n        return;\n    }\n\n    console.log(JSON.stringify(result, null, 2));\n});\n```\n\n### CLI Tool\n\n```shell\n$ cat << 'EOF' > blueprint.apib\n# GET /message\n+ Response 200\n\n        Hello World!\nEOF\n\n$ drafter blueprint.apib\n```\n\n## Resolved Named Types\n\nThe three rules for when MSON AST is expanded are:\n\n* If a named type is a sub-type of another named type\n* If a named types includes a mixin\n* If a value member or property member is referencing a named type\n\nThe expanded data structures are added to the array which has the original data structures with their element name set to `resolvedDataStructure`.\n\n## Resolved Assets\n\nThe resolved assets for a *payload body example* and *payload body schema* are added to the array in the `content` key of the **Payload Object** with their element name set to `resolvedAsset` and `role` in `attributes` set as `bodyExample` and `bodySchema` respectively.\n\nA sample part of payload object is given below\n\n```json\n{\n  \"content\": [\n    {\n      \"element\": \"resolvedAsset\",\n      \"attributes\": {\n        \"role\": \"bodyExample\"\n      },\n      \"content\": \"{\\\"id\\\":\\\"250FF\\\",\\\"percent_off\\\":25,\\\"redeem_by\\\":null}\"\n    },\n    {\n      \"element\": \"resolvedAsset\",\n      \"attributes\": {\n        \"role\": \"bodySchema\"\n      },\n      \"content\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"percent_off\\\":{\\\"type\\\":\\\"number\\\"},\\\"redeem_by\\\":{\\\"type\\\":\\\"number\\\",\\\"description\\\":\\\"Date after which the coupon can no longer be redeemed\\\"}},\\\"$schema\\\":\\\"http://json-schema.org/draft-04/schema#\\\"}\"\n    }\n  ]\n}\n```\n\n## Testing\n\nInside the drafter repository you can execute the following to run the test suite:\n\n```bash\n$ npm install\n$ npm test\n```\n\n### Contribute\nFork & Pull Request.\n\n## License\nMIT License. See the [LICENSE](https://github.com/apiaryio/drafter.js/blob/master/LICENSE) file.\n\n[Boutique]: https://github.com/apiaryio/boutique.js\n[Parse Result]: https://github.com/apiaryio/api-blueprint-ast/blob/master/Parse%20Result.md\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/apiaryio/drafter.js/issues"
  },
  "homepage": "https://github.com/apiaryio/drafter.js#readme",
  "_id": "drafter@0.2.8",
  "_from": "drafter@>=0.2.7 <0.3.0"
}
