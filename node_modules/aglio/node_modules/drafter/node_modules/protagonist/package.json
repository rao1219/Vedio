{
  "name": "protagonist",
  "version": "0.20.1",
  "description": "API Blueprint Parser",
  "author": {
    "name": "Apiary.io",
    "email": "support@apiary.io"
  },
  "main": "./build/Release/protagonist",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apiaryio/protagonist.git"
  },
  "engines": {
    "node": ">=0.8.15"
  },
  "dependencies": {
    "nan": "~1.8.4"
  },
  "devDependencies": {
    "coffee-script": "~1.6.0",
    "mocha": "~1.17.1",
    "async": "~0.2.10",
    "chai": "~1.9.0"
  },
  "scripts": {
    "test": "mocha --compilers coffee:coffee-script -R spec ./test/*-test.coffee",
    "install": "node-gyp rebuild"
  },
  "license": "MIT",
  "gypfile": true,
  "readme": "![logo](https://raw.github.com/apiaryio/api-blueprint/master/assets/logo_apiblueprint.png)\n\n# Protagonist\n\n[![Circle CI](https://circleci.com/gh/apiaryio/protagonist.svg?style=shield)](https://circleci.com/gh/apiaryio/protagonist)\n[![AppVeyor](https://ci.appveyor.com/api/projects/status/uaa6ivk97urmoucr?svg=true)](https://ci.appveyor.com/project/Apiary/protagonist)\n\n\n\n### API Blueprint Parser for Node.js\nProtagonist is a Node.js wrapper for the [Snow Crash](https://github.com/apiaryio/snowcrash) library.\n\nAPI Blueprint is Web API documentation language. You can find API Blueprint documentation on the [API Blueprint site](http://apiblueprint.org).\n\n## Install\nThe best way to install Protagonist is by using its [NPM package](https://npmjs.org/package/protagonist).\n\n```sh\n$ npm install protagonist\n```\n\nWorks smoothly with node.js ~0.8.15, 0.10.x, 0.12.x and iojs v1.x.x\n\n## Getting started\n\n```js\nvar protagonist = require('protagonist');\n\nprotagonist.parse('# My API', function(error, result) {\n    if (error) {\n        console.log(error);\n        return;\n    }\n\n    console.log(result.ast);\n});\n```\n\n### Synchronous usage\n\nIf you for some reason need to use the api synchronous, that is also possible.\nPlease note that the recommended way is to use the asynchronous api as to not\nblock the event loop.\n\n```js\nvar result = protagonist.parseSync('# My API');\n```\n\n### Parsing Result\n\nParsing this blueprint:\n\n```\n# GET /1\n+ response\n```\n\nwill produce the following object (`result` variable):\n\n```json\n{\n  \"ast\": {\n    \"_version\": \"3.0\",\n    \"metadata\": [],\n    \"name\": \"\",\n    \"description\": \"\",\n    \"resourceGroups\": [\n      {\n        \"name\": \"\",\n        \"description\": \"\",\n        \"resources\": [\n          {\n            \"name\": \"\",\n            \"description\": \"\",\n            \"uriTemplate\": \"/1\",\n            \"model\": {},\n            \"parameters\": [],\n            \"actions\": [\n              {\n                \"name\": \"\",\n                \"description\": \"\",\n                \"method\": \"GET\",\n                \"parameters\": [],\n                \"examples\": [\n                  {\n                    \"name\": \"\",\n                    \"description\": \"\",\n                    \"requests\": [],\n                    \"responses\": [\n                      {\n                        \"name\": \"200\",\n                        \"description\": \"\",\n                        \"headers\": [],\n                        \"body\": \"\",\n                        \"schema\": \"\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"warnings\": [\n    {\n      \"code\": 6,\n      \"message\": \"missing response HTTP status code, assuming 'Response 200'\",\n      \"location\": [\n        {\n          \"index\": 12,\n          \"length\": 9\n        }\n      ]\n    }\n  ]\n}\n```\n\n#### Keys Description\n\n+ `ast` ... This is the abstract syntax tree (AST) of the parsed blueprint.\n\n    The structure under this key is **1:1** with the [AST Blueprint serialization JSON media type v3.0](https://github.com/apiaryio/api-blueprint-ast#example-json-serialization) â€“ `vnd.apiblueprint.ast.raw+json; version=3.0`.\n\n+ `warnings` ... Array of the parser warnings as occurred during the parsing\n    + `code` ...  Warning [group](https://github.com/apiaryio/snowcrash/blob/master/src/SourceAnnotation.h#L128) code\n    + `message` ... Warning message\n    + `location` ... Array of (possibly non-continuous) locations in the source blueprint\n        + `index` ... Zero-based index of the character where the warning occurs\n        + `length` ... Number of the characters from index where the warning occurs\n\n## Hacking Protagonist\nYou are welcome to contribute. Use following steps to build & test Protagonist.\n\n### Build\nProtagonist uses [node-gyp](https://github.com/TooTallNate/node-gyp) build tool.\n\n1. If needed, install node-gyp:\n\n    ```sh\n    $ npm install -g node-gyp\n    ```\n\n2. Clone the repo + fetch the submodules:\n\n    ```sh\n    $ git clone git://github.com/apiaryio/protagonist.git\n    $ cd protagonist\n    $ git submodule update --init --recursive\n    $ npm install\n    ```\n\n3. Build:\n\n    ```sh\n    $ node-gyp configure\n    $ node-gyp build\n    ```\n\n### Test\nInside the protagonist repository run:\n\n```sh\n$ npm test\n```\n\n### Contribute\nFork & Pull Request.\n\n## License\nMIT License. See the [LICENSE](https://github.com/apiaryio/protagonist/blob/master/LICENSE) file.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/apiaryio/protagonist/issues"
  },
  "homepage": "https://github.com/apiaryio/protagonist#readme",
  "_id": "protagonist@0.20.1",
  "_from": "protagonist@>=0.20.1 <0.21.0"
}
