// Generated by CoffeeScript 1.7.1
var coerceLiteral, coerceNestedLiteral, detectSuccessful;

detectSuccessful = require('./utils').detectSuccessful;

coerceLiteral = function(literal, typeName, cb) {
  switch (typeName) {
    case 'number':
      if (isNaN(literal)) {
        return cb(new Error("Literal '" + literal + "' is not a number."));
      }
      return cb(null, parseFloat(literal, 10));
    case 'boolean':
      if (literal !== 'true' && literal !== 'false') {
        return cb(new Error("Literal '" + literal + "' is not 'true' or 'false'."));
      }
      return cb(null, literal === 'true');
    default:
      if (typeName === 'string' || !typeName) {
        return cb(null, literal);
      }
      return cb(new Error("Literal '" + literal + "' can't have type '" + typeName + "'."));
  }
};

coerceNestedLiteral = function(literal, typeNames, cb) {
  if (!(typeNames != null ? typeNames.length : void 0)) {
    typeNames = [void 0];
  }
  return detectSuccessful(typeNames, function(typeName, next) {
    return coerceLiteral(literal, typeName, next);
  }, cb);
};

module.exports = {
  coerceLiteral: coerceLiteral,
  coerceNestedLiteral: coerceNestedLiteral
};
