// Generated by CoffeeScript 1.7.1
var async, formats, json, jsonSchemaV4, represent, selectFormat, serializers;

async = require('async');

serializers = require('./serializers');

selectFormat = require('./formatselection').selectFormat;

jsonSchemaV4 = {
  lib: require('./formats/jsonschema-v4'),
  serialize: serializers.json
};

json = {
  lib: require('./formats/json'),
  serialize: serializers.json
};

formats = {
  'application/schema+json': jsonSchemaV4,
  'application/schema+json; profile="http://json-schema.org/schema"': jsonSchemaV4,
  'application/schema+json; profile="http://json-schema.org/draft-04/schema"': jsonSchemaV4,
  'application/json': json
};

represent = function(_arg, cb) {
  var ast, availableContentTypes, contentType;
  ast = _arg.ast, contentType = _arg.contentType;
  if (ast == null) {
    ast = {};
  }
  if (contentType == null) {
    contentType = 'application/schema+json';
  }
  availableContentTypes = Object.keys(formats);
  return selectFormat(contentType, availableContentTypes, function(err, selectedContentType) {
    var lib, serialize, _ref;
    if (err) {
      return cb(err);
    }
    if (!selectedContentType) {
      return cb(new Error("Content-Type '" + contentType + "' is not implemented."));
    }
    _ref = formats[selectedContentType], lib = _ref.lib, serialize = _ref.serialize;
    return lib.transform(ast, function(err, obj) {
      if (err) {
        return cb(err);
      }
      return serialize(obj, function(err, repr) {
        return cb(err, repr, selectedContentType);
      });
    });
  });
};

module.exports = {
  represent: represent
};
